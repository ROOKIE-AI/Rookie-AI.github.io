<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Works on Rookie AI</title>
    <link>https://Rookie-AI.github.io/works/</link>
    <description>Recent content in Works on Rookie AI</description>
    <generator>Hugo -- 0.136.5</generator>
    <language>en</language>
    <atom:link href="https://Rookie-AI.github.io/works/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>大模型应用</title>
      <link>https://Rookie-AI.github.io/works/genai/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://Rookie-AI.github.io/works/genai/</guid>
      <description>&lt;h2 id=&#34;大模型应用&#34;&gt;大模型应用&lt;/h2&gt;
&lt;h3 id=&#34;供电服务智能问答系统&#34;&gt;供电服务智能问答系统&lt;/h3&gt;
&lt;p&gt;该系统是一个基于大语言模型的智能客服解决方案，专为电力行业设计。通过处理客户音频通话记录，系统提供智能分析和专业解答。主要功能包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;语音识别&lt;/strong&gt;：支持多种音频格式转文字&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;智能分析&lt;/strong&gt;：自动提取通话关键信息（受理时间、联系人、地址、内容、跟进事项）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;专业问答&lt;/strong&gt;：基于供电营业规则知识库提供解答&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;结构化输出&lt;/strong&gt;：清晰展示分析结果和解决方案&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;技术上，系统集成了Streamlit、LangChain、FAISS向量数据库和Whisper语音识别，通过OpenAI API提供强大的语言理解能力。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://master-qtqkunyeoqrl22xzuyxayp.streamlit.app/&#34;&gt;在线演示&lt;/a&gt; | &lt;a href=&#34;https://github.com/ROOKIE-AI/Intelligent-Analysis-System-for-Power-Supply-Customer-Service-Conversations&#34;&gt;项目代码&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;会议准备ai助手&#34;&gt;会议准备AI助手&lt;/h3&gt;
&lt;p&gt;该系统是一个智能会议准备工具，通过多个AI助手协同工作，为用户生成全面的会议准备材料。主要特点包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;多AI助手协同系统&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;背景分析专家：深入研究公司信息&lt;/li&gt;
&lt;li&gt;行业专家：分析市场趋势&lt;/li&gt;
&lt;li&gt;策略专家：制定会议策略&lt;/li&gt;
&lt;li&gt;沟通专家：整合信息输出&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;多文档处理能力&lt;/strong&gt;：支持Word、PDF、PPT、Excel等多种文档格式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;智能分析输出&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;会议背景分析&lt;/li&gt;
&lt;li&gt;行业趋势洞察&lt;/li&gt;
&lt;li&gt;定制化会议策略&lt;/li&gt;
&lt;li&gt;详细执行简报&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;技术上，系统基于Streamlit开发，集成了OpenAI的GPT模型和维基百科搜索功能，提供实时分析进度展示和详细日志记录。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://9yskzputwjappacugobfxwo.streamlit.app/&#34;&gt;在线演示&lt;/a&gt; | &lt;a href=&#34;https://github.com/ROOKIE-AI/ai_meeting_agent&#34;&gt;项目代码&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>时间序列预测项目</title>
      <link>https://Rookie-AI.github.io/works/timeseries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://Rookie-AI.github.io/works/timeseries/</guid>
      <description>&lt;h2 id=&#34;时间序列预测项目&#34;&gt;时间序列预测项目&lt;/h2&gt;
&lt;h3 id=&#34;windcast-风力发电预测系统&#34;&gt;WindCast: 风力发电预测系统&lt;/h3&gt;
&lt;p&gt;该项目基于龙源电力集团提供的SDWPF（Sustainable Development Wind Power Forecasting）数据集，构建了一个风力发电预测系统。系统利用机器学习方法，通过分析风速、温度等多个特征，对风力涡轮机的发电量进行精确预测。&lt;/p&gt;
&lt;h4 id=&#34;主要功能&#34;&gt;主要功能&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;数据预处理与清洗&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;异常值检测与处理&lt;/li&gt;
&lt;li&gt;缺失值填补&lt;/li&gt;
&lt;li&gt;数据标准化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;特征工程&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;角度特征转换（正弦/余弦编码）&lt;/li&gt;
&lt;li&gt;时间特征编码&lt;/li&gt;
&lt;li&gt;温度数据修正&lt;/li&gt;
&lt;li&gt;冗余特征删除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;预测模型&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;线性回归模型（单变量/多变量）&lt;/li&gt;
&lt;li&gt;神经网络模型(MLP、Conv-LSTM)&lt;/li&gt;
&lt;li&gt;特征重要性分析&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;关键特征&#34;&gt;关键特征&lt;/h4&gt;
&lt;p&gt;系统分析的主要特征包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;风速(Wspd)&lt;/li&gt;
&lt;li&gt;风向(Wdir)&lt;/li&gt;
&lt;li&gt;环境温度(Etmp)&lt;/li&gt;
&lt;li&gt;内部温度(Itmp)&lt;/li&gt;
&lt;li&gt;机舱方向(Ndir)&lt;/li&gt;
&lt;li&gt;叶片角度(Pab)&lt;/li&gt;
&lt;li&gt;相对功率(Prtv)&lt;/li&gt;
&lt;li&gt;有功功率(Patv)：预测目标&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;技术栈&#34;&gt;技术栈&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;pandas、numpy：数据处理&lt;/li&gt;
&lt;li&gt;matplotlib、seaborn：数据可视化&lt;/li&gt;
&lt;li&gt;scikit-learn：机器学习模型&lt;/li&gt;
&lt;li&gt;PyTorch：深度学习模型&lt;/li&gt;
&lt;li&gt;SHAP：模型解释性分析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目采用平均绝对误差(MAE)作为评估指标，提供预测值与实际值的可视化对比及特征重要性分析，使结果更加直观可解释。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ROOKIE-AI/WindCast&#34;&gt;项目代码&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>气象绘图框架</title>
      <link>https://Rookie-AI.github.io/works/matplotlib/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://Rookie-AI.github.io/works/matplotlib/</guid>
      <description>&lt;h1 id=&#34;xyplot---气象行业的专业绘图框架&#34;&gt;xyplot - 气象行业的专业绘图框架&lt;/h1&gt;
&lt;p&gt;xyplot是一个专为气象行业设计的Python绘图封装库，基于Matplotlib构建。它提供了简洁的API和灵活的配置选项，帮助用户高效地创建专业级别的气象数据可视化图表。&lt;/p&gt;
&lt;h2 id=&#34;主要特性&#34;&gt;主要特性&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;简化绘图流程&lt;/strong&gt;：大幅减少绘图代码量，提高开发效率&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置化设计&lt;/strong&gt;：支持通过外部配置文件进行个性化定制&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;组件化架构&lt;/strong&gt;：便于代码复用和维护&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;丰富的图表类型&lt;/strong&gt;：支持等高线填充图、流线图、散点图、折线图等气象常用图表&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;灵活的布局系统&lt;/strong&gt;：支持多种子图布局方式（subplot、subplot2grid、add_axes）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;精细化控制&lt;/strong&gt;：提供对坐标轴、色阶、图例等元素的详细设置&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;设计理念&#34;&gt;设计理念&lt;/h2&gt;
&lt;p&gt;xyplot采用面向对象的设计思路，结合了多种设计模式（建造者模式、适配器模式、模板方法模式等），使代码结构清晰、易于扩展。其目标是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;简化绘图方法，降低绘图代码量&lt;/li&gt;
&lt;li&gt;便于绘图代码的封装分类，提高其复用性和维护性&lt;/li&gt;
&lt;li&gt;支持通过外部配置文件对可视化产品进行个性化定制&lt;/li&gt;
&lt;li&gt;为未来的绘图GUI/Web配置化打下基础&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;使用示例&#34;&gt;使用示例&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; np
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; xyplot &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; XyPlot
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 准备数据&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;linspace(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pi, np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pi, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sin(x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 配置字典&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set_fig_dict &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dict(height&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, width&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;axes_dict &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dict(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plot&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dict(args&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(x, y), label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;y=sin(x)&amp;#39;&lt;/span&gt;, c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;k&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;y=sin(x)&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 创建并显示图表&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cfg &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dict(set_fig&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;set_fig_dict, axes&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;axes_dict)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xyplt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; XyPlot(&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;cfg)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xyplt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;主要组件&#34;&gt;主要组件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;XyPlot&lt;/strong&gt;：顶层绘图对象，用于控制整体绘图流程&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AxesBuilder&lt;/strong&gt;：用于构建和配置Matplotlib Axes对象&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ContourfDirector&lt;/strong&gt;：等高线填充图绘制对象&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ColorMapBuilder&lt;/strong&gt;：色阶颜色映射构建设置类&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SetFigure&lt;/strong&gt;：画布设置类&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SetAxes&lt;/strong&gt;：子区域绘图对象设置类&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;项目链接&#34;&gt;项目链接&lt;/h2&gt;
&lt;p&gt;更多详细信息和代码示例，请访问项目GitHub仓库：&lt;a href=&#34;https://github.com/Rookiehhh/xyplot.git&#34;&gt;xyplot&lt;/a&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

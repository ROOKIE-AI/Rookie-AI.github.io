<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Rookie AI</title>
    <link>https://Rookie-AI.github.io/</link>
    <description>Recent content on Rookie AI</description>
    <generator>Hugo -- 0.136.5</generator>
    <language>en</language>
    <lastBuildDate>Sun, 27 Oct 2024 13:30:00 +0800</lastBuildDate>
    <atom:link href="https://Rookie-AI.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>时间序列分析: Prophet</title>
      <link>https://Rookie-AI.github.io/time-series/%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E5%88%86%E6%9E%90prophet/</link>
      <pubDate>Sun, 27 Oct 2024 13:30:00 +0800</pubDate>
      <guid>https://Rookie-AI.github.io/time-series/%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E5%88%86%E6%9E%90prophet/</guid>
      <description>&lt;h3 id=&#34;prophet-简介&#34;&gt;Prophet 简介&lt;/h3&gt;
&lt;p&gt;Prophet 是由 Facebook（现为 Meta）开发的开源时间序列预测工具，旨在为具有趋势和季节性成分的时间序列数据提供高准确性、易解释的预测模型。它基于可加性模型，将时间序列分解为趋势、季节性、节假日效应和残差，为用户提供灵活且强大的预测能力。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;主要特点&#34;&gt;主要特点&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;易于使用&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;快速上手&lt;/strong&gt;：少量代码即可完成建模和预测。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;友好的 API&lt;/strong&gt;：简单直观的接口，适合数据科学家和业务分析师。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;处理复杂的时间序列&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;趋势分解&lt;/strong&gt;：自动检测并建模数据的增长或减少趋势。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;季节性调整&lt;/strong&gt;：支持每日、每周、每年的季节性因素。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;节假日效应&lt;/strong&gt;：纳入节假日和特殊事件的影响。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;鲁棒性强&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;应对异常值&lt;/strong&gt;：对缺失值和异常值有良好的容错性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;缺失数据处理&lt;/strong&gt;：无需对缺失数据进行复杂的插值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;可解释性&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;组件分解&lt;/strong&gt;：单独查看趋势、季节性和节假日效应的影响。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;透明的模型参数&lt;/strong&gt;：便于理解和调整模型。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;灵活性&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;自定义季节性&lt;/strong&gt;：允许添加自定义的季节性周期。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;支持先验知识&lt;/strong&gt;：可通过参数调整引入领域知识。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;基本原理&#34;&gt;基本原理&lt;/h3&gt;
&lt;p&gt;Prophet 使用可加性模型，将时间序列表示为多个组件的和：&lt;/p&gt;
&lt;p&gt;$$
y(t) = g(t) + s(t) + h(t) + \varepsilon_t
$$&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;g(t) ：趋势函数，表示非周期性变化。&lt;/li&gt;
&lt;li&gt;s(t) ：季节性函数，表示周期性变化（如年度、每周、每日）。&lt;/li&gt;
&lt;li&gt;h(t) ：节假日效应，捕捉特定日期的影响。&lt;/li&gt;
&lt;li&gt;ɛ_t  ： 误差项，表示未解释的部分。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;安装方法&#34;&gt;安装方法&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Python 版本安装&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install prophet
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;注意：早期版本的包名为 &lt;code&gt;fbprophet&lt;/code&gt;，从 v1.0 版本开始更名为 &lt;code&gt;prophet&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;R 版本安装&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;install.packages&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prophet&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;基本使用步骤&#34;&gt;基本使用步骤&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;导入库&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; prophet &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Prophet
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;准备数据&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://Rookie-AI.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://Rookie-AI.github.io/about/</guid>
      <description>&lt;h1 id=&#34;关于我&#34;&gt;关于我&lt;/h1&gt;
&lt;h3 id=&#34;公众号&#34;&gt;公众号&lt;/h3&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://Rookie-AI.github.io/img/wechat_small.jpg&#34; alt=&#34;Rookie-AI&#34;  /&gt;
&lt;/p&gt;
&lt;h3 id=&#34;githubhttpsgithubcomrookie-ai&#34;&gt;&lt;a href=&#34;https://github.com/ROOKIE-AI&#34;&gt;GitHub&lt;/a&gt;&lt;/h3&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://Rookie-AI.github.io/notebook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://Rookie-AI.github.io/notebook/</guid>
      <description>&lt;h2 id=&#34;-机器学习ml&#34;&gt;🌟 &lt;a href=&#34;https://Rookie-AI.github.io/ML/&#34;&gt;机器学习&lt;/a&gt;&lt;/h2&gt;
&lt;h2 id=&#34;-深度学习dl&#34;&gt;🌟 &lt;a href=&#34;https://Rookie-AI.github.io/dl/&#34;&gt;深度学习&lt;/a&gt;&lt;/h2&gt;
&lt;h2 id=&#34;-时间序列分析time-series&#34;&gt;🌟 &lt;a href=&#34;https://Rookie-AI.github.io/time-series/&#34;&gt;时间序列分析&lt;/a&gt;&lt;/h2&gt;
&lt;h2 id=&#34;-cs编程cs&#34;&gt;🌟 &lt;a href=&#34;https://Rookie-AI.github.io/cs/&#34;&gt;CS编程&lt;/a&gt;&lt;/h2&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://Rookie-AI.github.io/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/01.%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0%E7%BA%BF%E6%80%A7%E7%A5%9E%E7%BB%8F%E5%85%83%E4%BA%8C%E5%88%86%E7%B1%BB%E5%99%A8/01.%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0%E7%BA%BF%E6%80%A7%E7%A5%9E%E7%BB%8F%E5%85%83%E4%BA%8C%E5%88%86%E7%B1%BB%E5%99%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://Rookie-AI.github.io/%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/01.%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0%E7%BA%BF%E6%80%A7%E7%A5%9E%E7%BB%8F%E5%85%83%E4%BA%8C%E5%88%86%E7%B1%BB%E5%99%A8/01.%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0%E7%BA%BF%E6%80%A7%E7%A5%9E%E7%BB%8F%E5%85%83%E4%BA%8C%E5%88%86%E7%B1%BB%E5%99%A8/</guid>
      <description>&lt;h1 id=&#34;从零实现线性神经网络二分类器&#34;&gt;从零实现线性神经网络二分类器&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; np  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; collections &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; defaultdict
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; plt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;  本文主要旨在从零对算法进行实现，因此对算法原理的阐述将保持简洁。接下来，我们将概述感知机和逻辑斯蒂回归（Logistic Regression）的基本原理，并提供从零实现这两种算法的示例。此外，我们还将通过启发式方法探讨它们在实际应用中的局限性。&lt;/p&gt;
&lt;h2 id=&#34;感知机&#34;&gt;感知机&lt;/h2&gt;
&lt;h3 id=&#34;算法原理&#34;&gt;算法原理&lt;/h3&gt;
&lt;p&gt;感知机（Perceptron）是一种基础的线性分类模型，最早由弗兰克·罗森布拉特 (Frank Rosenblatt) 在1958年提出。其主要原理如下：&lt;/p&gt;
&lt;h4 id=&#34;1-模型结构&#34;&gt;1. 模型结构&lt;/h4&gt;
&lt;p&gt;感知机由输入节点、权重、偏置和激活函数组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;输入节点&lt;/strong&gt;：接收输入特征的值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;权重&lt;/strong&gt;：每个输入特征都有一个对应的权重，用于衡量特征的重要性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;偏置&lt;/strong&gt;：一个常数项，使模型能够更灵活地拟合数据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;激活函数&lt;/strong&gt;：通常是阶跃函数，将加权和转换为输出（0或1）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-工作流程&#34;&gt;2. 工作流程&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;加权求和&lt;/strong&gt;：计算输入特征与对应权重的加权和：&lt;br&gt;
$$
z = \sum_{i=1}^{n} w_i x_i + b&lt;br&gt;
$$
其中，$ w_i $ 是权重，$ x_i $ 是输入特征，$ b $ 是偏置。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;应用激活函数&lt;/strong&gt;：将加权和 (z) 输入到激活函数中，决定输出类别：&lt;br&gt;
$$
y = f(z)&lt;br&gt;
$$
典型的激活函数为阶跃函数：&lt;br&gt;
$$
f(z) =&lt;br&gt;
\begin{cases}&lt;br&gt;
1 &amp;amp; \text{if } z \geq 0 \&lt;br&gt;
0 &amp;amp; \text{if } z &amp;lt; 0&lt;br&gt;
\end{cases}&lt;br&gt;
$$&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python学习笔记</title>
      <link>https://Rookie-AI.github.io/cs/python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://Rookie-AI.github.io/cs/python/</guid>
      <description>&lt;h1 id=&#34;python学习笔记&#34;&gt;Python学习笔记&lt;/h1&gt;
&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;
&lt;p&gt;这里收录了我在学习Python过程中整理的笔记、代码示例和重要概念。主要基于《流畅的Python》和《Python 3 面向对象编程》等优秀教材，涵盖从基础语法到高级特性的多个方面。&lt;/p&gt;
&lt;h2 id=&#34;学习资源&#34;&gt;学习资源&lt;/h2&gt;
&lt;h3 id=&#34;参考书籍&#34;&gt;参考书籍&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;《流畅的Python》(Fluent Python) - Luciano Ramalho&lt;/li&gt;
&lt;li&gt;《Python 3 面向对象编程》(Python 3 Object-Oriented Programming)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;主要内容&#34;&gt;主要内容&lt;/h2&gt;
&lt;h3 id=&#34;流畅的python笔记&#34;&gt;《流畅的Python》笔记&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Python数据模型&lt;/strong&gt; - 特殊方法、魔术方法、对象表示&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;序列构成的数组&lt;/strong&gt; - 列表推导式、生成器表达式、元组解包&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;字典与集合&lt;/strong&gt; - 映射类型、散列表、可散列类型&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文本和字节序列&lt;/strong&gt; - 字符编码、Unicode、二进制序列&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;一等函数&lt;/strong&gt; - 函数对象、高阶函数、匿名函数&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;函数装饰器和闭包&lt;/strong&gt; - 闭包原理、装饰器模式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;对象引用、可变性和垃圾回收&lt;/strong&gt; - 变量引用、不可变性、弱引用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;符合Python风格的对象&lt;/strong&gt; - 对象表示形式、格式化、特性属性&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;序列的修改、散切和切片&lt;/strong&gt; - 协议、可切片序列、动态属性&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;接口-从协议到抽象基类&lt;/strong&gt; - 鸭子类型、抽象基类、虚拟子类&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;python-3-面向对象编程笔记&#34;&gt;《Python 3 面向对象编程》笔记&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;异常捕获&lt;/strong&gt; - 异常处理、自定义异常&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;何时使用面向对象编程&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Python数据结构&lt;/strong&gt; - 元组、命名元组、字典、列表、集合&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;特点&#34;&gt;特点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;包含丰富的代码示例和输出结果&lt;/li&gt;
&lt;li&gt;每章总结有关键概念图解&lt;/li&gt;
&lt;li&gt;Jupyter Notebook格式，便于互动学习和执行代码&lt;/li&gt;
&lt;li&gt;重点突出Python的特性和最佳实践&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;代码仓库&#34;&gt;代码仓库&lt;/h2&gt;
&lt;p&gt;所有笔记和代码示例都可以在我的GitHub仓库中找到：
&lt;a href=&#34;https://github.com/Rookie-CS/Python&#34;&gt;Python学习笔记仓库&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQL学习笔记</title>
      <link>https://Rookie-AI.github.io/cs/sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://Rookie-AI.github.io/cs/sql/</guid>
      <description>&lt;h1 id=&#34;sql学习笔记&#34;&gt;SQL学习笔记&lt;/h1&gt;
&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;
&lt;p&gt;本笔记集合记录了SQL学习过程中的重要知识点和实践经验，主要基于MySQL数据库。使用Jupyter Notebook格式记录，内容涵盖了从基础语法到高级查询的完整SQL知识体系。&lt;/p&gt;
&lt;h2 id=&#34;环境配置&#34;&gt;环境配置&lt;/h2&gt;
&lt;p&gt;笔记使用的环境：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python 3.11.9&lt;/li&gt;
&lt;li&gt;Jupyter Notebook&lt;/li&gt;
&lt;li&gt;MySQL 数据库&lt;/li&gt;
&lt;li&gt;mysql-connector-python&lt;/li&gt;
&lt;li&gt;ipython-sql 扩展&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;主要内容&#34;&gt;主要内容&lt;/h2&gt;
&lt;h3 id=&#34;1-mysql连接&#34;&gt;1. MySQL连接&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Jupyter魔法方法连接MySQL&lt;/li&gt;
&lt;li&gt;使用Python库连接MySQL&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-sql通用语法及分类&#34;&gt;2. SQL通用语法及分类&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DDL&lt;/strong&gt; (数据定义语言)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DML&lt;/strong&gt; (数据操作语言)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DQL&lt;/strong&gt; (数据查询语言)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DCL&lt;/strong&gt; (数据控制语言)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-ddl---数据定义语言&#34;&gt;3. DDL - 数据定义语言&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;数据库操作：创建、查询、修改、删除&lt;/li&gt;
&lt;li&gt;表操作：创建表、删除表、修改表结构&lt;/li&gt;
&lt;li&gt;字段操作：添加、修改、删除字段&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-dml---数据操作语言&#34;&gt;4. DML - 数据操作语言&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;添加数据&lt;/li&gt;
&lt;li&gt;修改数据&lt;/li&gt;
&lt;li&gt;删除数据&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-dql---数据查询语言&#34;&gt;5. DQL - 数据查询语言&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;基本查询&lt;/li&gt;
&lt;li&gt;条件查询 (WHERE)&lt;/li&gt;
&lt;li&gt;聚合函数 (count、max、min、avg、sum)&lt;/li&gt;
&lt;li&gt;分组查询 (GROUP BY)&lt;/li&gt;
&lt;li&gt;排序查询 (ORDER BY)&lt;/li&gt;
&lt;li&gt;分页查询 (LIMIT)&lt;/li&gt;
&lt;li&gt;执行顺序&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-dcl---数据控制语言&#34;&gt;6. DCL - 数据控制语言&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;用户管理：创建、修改、删除用户&lt;/li&gt;
&lt;li&gt;权限控制：授予权限、撤销权限&lt;/li&gt;
&lt;li&gt;查询权限&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7-函数&#34;&gt;7. 函数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;字符串函数&lt;/li&gt;
&lt;li&gt;数字函数&lt;/li&gt;
&lt;li&gt;日期函数&lt;/li&gt;
&lt;li&gt;流程控制函数&lt;/li&gt;
&lt;li&gt;窗口函数&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8-约束&#34;&gt;8. 约束&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;主键约束&lt;/li&gt;
&lt;li&gt;非空约束&lt;/li&gt;
&lt;li&gt;唯一约束&lt;/li&gt;
&lt;li&gt;默认约束&lt;/li&gt;
&lt;li&gt;检查约束&lt;/li&gt;
&lt;li&gt;外键约束&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;9-多表查询&#34;&gt;9. 多表查询&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;多表关系：一对多、多对多、一对一&lt;/li&gt;
&lt;li&gt;连接查询：
&lt;ul&gt;
&lt;li&gt;内连接&lt;/li&gt;
&lt;li&gt;外连接（左连接、右连接）&lt;/li&gt;
&lt;li&gt;自连接&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;子查询：
&lt;ul&gt;
&lt;li&gt;标量子查询&lt;/li&gt;
&lt;li&gt;列子查询&lt;/li&gt;
&lt;li&gt;行子查询&lt;/li&gt;
&lt;li&gt;表子查询&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;10-事务&#34;&gt;10. 事务&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;事务的基本概念&lt;/li&gt;
&lt;li&gt;事务的ACID特性&lt;/li&gt;
&lt;li&gt;事务控制&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;特点&#34;&gt;特点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;系统化的知识结构&lt;/li&gt;
&lt;li&gt;详细的代码示例&lt;/li&gt;
&lt;li&gt;Jupyter格式，可交互执行&lt;/li&gt;
&lt;li&gt;包含实际案例和解释&lt;/li&gt;
&lt;li&gt;适合入门到进阶的SQL学习&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;示例数据&#34;&gt;示例数据&lt;/h2&gt;
&lt;p&gt;笔记中使用了MySQL自带的&lt;code&gt;world&lt;/code&gt;数据库进行演示，这个数据库包含了国家、城市和语言等相关数据。&lt;/p&gt;</description>
    </item>
    <item>
      <title>大模型应用</title>
      <link>https://Rookie-AI.github.io/works/genai/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://Rookie-AI.github.io/works/genai/</guid>
      <description>&lt;h2 id=&#34;大模型应用&#34;&gt;大模型应用&lt;/h2&gt;
&lt;h3 id=&#34;供电服务智能问答系统&#34;&gt;供电服务智能问答系统&lt;/h3&gt;
&lt;p&gt;该系统是一个基于大语言模型的智能客服解决方案，专为电力行业设计。通过处理客户音频通话记录，系统提供智能分析和专业解答。主要功能包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;语音识别&lt;/strong&gt;：支持多种音频格式转文字&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;智能分析&lt;/strong&gt;：自动提取通话关键信息（受理时间、联系人、地址、内容、跟进事项）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;专业问答&lt;/strong&gt;：基于供电营业规则知识库提供解答&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;结构化输出&lt;/strong&gt;：清晰展示分析结果和解决方案&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;技术上，系统集成了Streamlit、LangChain、FAISS向量数据库和Whisper语音识别，通过OpenAI API提供强大的语言理解能力。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://master-qtqkunyeoqrl22xzuyxayp.streamlit.app/&#34;&gt;在线演示&lt;/a&gt; | &lt;a href=&#34;https://github.com/ROOKIE-AI/Intelligent-Analysis-System-for-Power-Supply-Customer-Service-Conversations&#34;&gt;项目代码&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;会议准备ai助手&#34;&gt;会议准备AI助手&lt;/h3&gt;
&lt;p&gt;该系统是一个智能会议准备工具，通过多个AI助手协同工作，为用户生成全面的会议准备材料。主要特点包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;多AI助手协同系统&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;背景分析专家：深入研究公司信息&lt;/li&gt;
&lt;li&gt;行业专家：分析市场趋势&lt;/li&gt;
&lt;li&gt;策略专家：制定会议策略&lt;/li&gt;
&lt;li&gt;沟通专家：整合信息输出&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;多文档处理能力&lt;/strong&gt;：支持Word、PDF、PPT、Excel等多种文档格式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;智能分析输出&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;会议背景分析&lt;/li&gt;
&lt;li&gt;行业趋势洞察&lt;/li&gt;
&lt;li&gt;定制化会议策略&lt;/li&gt;
&lt;li&gt;详细执行简报&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;技术上，系统基于Streamlit开发，集成了OpenAI的GPT模型和维基百科搜索功能，提供实时分析进度展示和详细日志记录。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://9yskzputwjappacugobfxwo.streamlit.app/&#34;&gt;在线演示&lt;/a&gt; | &lt;a href=&#34;https://github.com/ROOKIE-AI/ai_meeting_agent&#34;&gt;项目代码&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据结构与算法学习笔记</title>
      <link>https://Rookie-AI.github.io/cs/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://Rookie-AI.github.io/cs/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</guid>
      <description>&lt;h1 id=&#34;数据结构与算法学习笔记&#34;&gt;数据结构与算法学习笔记&lt;/h1&gt;
&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;p&gt;这是一个关于数据结构与算法的学习笔记仓库，包含了常见数据结构的实现、基础算法以及LeetCode题目解答。所有代码主要使用C++实现，部分使用Python。通过Jupyter Notebook的形式展示，方便学习和调试。&lt;/p&gt;
&lt;h2 id=&#34;仓库结构&#34;&gt;仓库结构&lt;/h2&gt;
&lt;h3 id=&#34;数据结构-ds&#34;&gt;数据结构 (DS)&lt;/h3&gt;
&lt;h4 id=&#34;线性结构&#34;&gt;线性结构&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;linear&lt;/strong&gt;: 线性表的实现
&lt;ul&gt;
&lt;li&gt;顺序存储实现&lt;/li&gt;
&lt;li&gt;链式存储实现&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;栈与队列&#34;&gt;栈与队列&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;stack&lt;/strong&gt;: 栈的实现
&lt;ul&gt;
&lt;li&gt;顺序存储的栈&lt;/li&gt;
&lt;li&gt;链式存储的栈&lt;/li&gt;
&lt;li&gt;中缀/后缀表达式求值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;queue&lt;/strong&gt;: 队列的实现
&lt;ul&gt;
&lt;li&gt;顺序存储的循环队列(C++实现)&lt;/li&gt;
&lt;li&gt;顺序存储的循环队列(Python实现)&lt;/li&gt;
&lt;li&gt;链式存储的队列&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;树结构&#34;&gt;树结构&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;tree&lt;/strong&gt;: 树结构的实现
&lt;ul&gt;
&lt;li&gt;二叉树的基本操作与遍历&lt;/li&gt;
&lt;li&gt;搜索二叉树&lt;/li&gt;
&lt;li&gt;平衡二叉树(AVL树)&lt;/li&gt;
&lt;li&gt;堆的实现&lt;/li&gt;
&lt;li&gt;哈夫曼树&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;算法实现&#34;&gt;算法实现&lt;/h3&gt;
&lt;h4 id=&#34;基础算法&#34;&gt;基础算法&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;sort&lt;/strong&gt;: 排序算法
&lt;ul&gt;
&lt;li&gt;冒泡排序&lt;/li&gt;
&lt;li&gt;选择排序&lt;/li&gt;
&lt;li&gt;插入排序&lt;/li&gt;
&lt;li&gt;希尔排序&lt;/li&gt;
&lt;li&gt;归并排序&lt;/li&gt;
&lt;li&gt;快速排序&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;find&lt;/strong&gt;: 查找算法
&lt;ul&gt;
&lt;li&gt;顺序表查找&lt;/li&gt;
&lt;li&gt;有序表查找
&lt;ul&gt;
&lt;li&gt;二分查找&lt;/li&gt;
&lt;li&gt;插值查找&lt;/li&gt;
&lt;li&gt;斐波那契查找&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;散列表查找&lt;/li&gt;
&lt;li&gt;线性索引查找&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;leetcode题目解答&#34;&gt;LeetCode题目解答&lt;/h3&gt;
&lt;h4 id=&#34;hot-100&#34;&gt;HOT-100&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;二分查找&lt;/li&gt;
&lt;li&gt;动态规划&lt;/li&gt;
&lt;li&gt;堆&lt;/li&gt;
&lt;li&gt;哈希表&lt;/li&gt;
&lt;li&gt;普通数组&lt;/li&gt;
&lt;li&gt;贪心算法&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;经典面试150题&#34;&gt;经典面试150题&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;双指针&lt;/li&gt;
&lt;li&gt;哈希表&lt;/li&gt;
&lt;li&gt;其他常见题型&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;学习建议&#34;&gt;学习建议&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;从基础数据结构开始学习 (线性表、栈、队列)&lt;/li&gt;
&lt;li&gt;进阶学习树结构和高级数据结构&lt;/li&gt;
&lt;li&gt;掌握基本排序和查找算法&lt;/li&gt;
&lt;li&gt;通过LeetCode题目实践巩固算法思想&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;特点&#34;&gt;特点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Jupyter Notebook格式展示，便于交互学习&lt;/li&gt;
&lt;li&gt;包含详细注释和实现过程&lt;/li&gt;
&lt;li&gt;算法复杂度分析&lt;/li&gt;
&lt;li&gt;多种语言实现（主要是C++和Python）&lt;/li&gt;
&lt;li&gt;包含经典题目和解题思路&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;开发环境&#34;&gt;开发环境&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Jupyter Notebook&lt;/li&gt;
&lt;li&gt;C++内核 (xeus-cling)&lt;/li&gt;
&lt;li&gt;Python 3.x&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;代码仓库&#34;&gt;代码仓库&lt;/h2&gt;
&lt;p&gt;所有笔记和代码示例都可以在我的GitHub仓库中找到：
&lt;a href=&#34;https://github.com/Rookie-CS/DS-Algo&#34;&gt;数据结构与算法学习仓库&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>时间序列预测项目</title>
      <link>https://Rookie-AI.github.io/works/timeseries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://Rookie-AI.github.io/works/timeseries/</guid>
      <description>&lt;h2 id=&#34;时间序列预测项目&#34;&gt;时间序列预测项目&lt;/h2&gt;
&lt;h3 id=&#34;windcast-风力发电预测系统&#34;&gt;WindCast: 风力发电预测系统&lt;/h3&gt;
&lt;p&gt;该项目基于龙源电力集团提供的SDWPF（Sustainable Development Wind Power Forecasting）数据集，构建了一个风力发电预测系统。系统利用机器学习方法，通过分析风速、温度等多个特征，对风力涡轮机的发电量进行精确预测。&lt;/p&gt;
&lt;h4 id=&#34;主要功能&#34;&gt;主要功能&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;数据预处理与清洗&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;异常值检测与处理&lt;/li&gt;
&lt;li&gt;缺失值填补&lt;/li&gt;
&lt;li&gt;数据标准化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;特征工程&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;角度特征转换（正弦/余弦编码）&lt;/li&gt;
&lt;li&gt;时间特征编码&lt;/li&gt;
&lt;li&gt;温度数据修正&lt;/li&gt;
&lt;li&gt;冗余特征删除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;预测模型&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;线性回归模型（单变量/多变量）&lt;/li&gt;
&lt;li&gt;神经网络模型(MLP、Conv-LSTM)&lt;/li&gt;
&lt;li&gt;特征重要性分析&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;关键特征&#34;&gt;关键特征&lt;/h4&gt;
&lt;p&gt;系统分析的主要特征包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;风速(Wspd)&lt;/li&gt;
&lt;li&gt;风向(Wdir)&lt;/li&gt;
&lt;li&gt;环境温度(Etmp)&lt;/li&gt;
&lt;li&gt;内部温度(Itmp)&lt;/li&gt;
&lt;li&gt;机舱方向(Ndir)&lt;/li&gt;
&lt;li&gt;叶片角度(Pab)&lt;/li&gt;
&lt;li&gt;相对功率(Prtv)&lt;/li&gt;
&lt;li&gt;有功功率(Patv)：预测目标&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;技术栈&#34;&gt;技术栈&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;pandas、numpy：数据处理&lt;/li&gt;
&lt;li&gt;matplotlib、seaborn：数据可视化&lt;/li&gt;
&lt;li&gt;scikit-learn：机器学习模型&lt;/li&gt;
&lt;li&gt;PyTorch：深度学习模型&lt;/li&gt;
&lt;li&gt;SHAP：模型解释性分析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目采用平均绝对误差(MAE)作为评估指标，提供预测值与实际值的可视化对比及特征重要性分析，使结果更加直观可解释。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ROOKIE-AI/WindCast&#34;&gt;项目代码&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>气象绘图框架</title>
      <link>https://Rookie-AI.github.io/works/matplotlib/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://Rookie-AI.github.io/works/matplotlib/</guid>
      <description>&lt;h1 id=&#34;xyplot---气象行业的专业绘图框架&#34;&gt;xyplot - 气象行业的专业绘图框架&lt;/h1&gt;
&lt;p&gt;xyplot是一个专为气象行业设计的Python绘图封装库，基于Matplotlib构建。它提供了简洁的API和灵活的配置选项，帮助用户高效地创建专业级别的气象数据可视化图表。&lt;/p&gt;
&lt;h2 id=&#34;主要特性&#34;&gt;主要特性&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;简化绘图流程&lt;/strong&gt;：大幅减少绘图代码量，提高开发效率&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置化设计&lt;/strong&gt;：支持通过外部配置文件进行个性化定制&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;组件化架构&lt;/strong&gt;：便于代码复用和维护&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;丰富的图表类型&lt;/strong&gt;：支持等高线填充图、流线图、散点图、折线图等气象常用图表&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;灵活的布局系统&lt;/strong&gt;：支持多种子图布局方式（subplot、subplot2grid、add_axes）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;精细化控制&lt;/strong&gt;：提供对坐标轴、色阶、图例等元素的详细设置&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;设计理念&#34;&gt;设计理念&lt;/h2&gt;
&lt;p&gt;xyplot采用面向对象的设计思路，结合了多种设计模式（建造者模式、适配器模式、模板方法模式等），使代码结构清晰、易于扩展。其目标是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;简化绘图方法，降低绘图代码量&lt;/li&gt;
&lt;li&gt;便于绘图代码的封装分类，提高其复用性和维护性&lt;/li&gt;
&lt;li&gt;支持通过外部配置文件对可视化产品进行个性化定制&lt;/li&gt;
&lt;li&gt;为未来的绘图GUI/Web配置化打下基础&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;使用示例&#34;&gt;使用示例&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; np
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; xyplot &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; XyPlot
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 准备数据&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;linspace(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pi, np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pi, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sin(x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 配置字典&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set_fig_dict &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dict(height&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, width&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;axes_dict &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dict(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plot&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dict(args&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(x, y), label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;y=sin(x)&amp;#39;&lt;/span&gt;, c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;k&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;y=sin(x)&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 创建并显示图表&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cfg &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dict(set_fig&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;set_fig_dict, axes&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;axes_dict)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xyplt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; XyPlot(&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;cfg)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xyplt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;主要组件&#34;&gt;主要组件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;XyPlot&lt;/strong&gt;：顶层绘图对象，用于控制整体绘图流程&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AxesBuilder&lt;/strong&gt;：用于构建和配置Matplotlib Axes对象&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ContourfDirector&lt;/strong&gt;：等高线填充图绘制对象&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ColorMapBuilder&lt;/strong&gt;：色阶颜色映射构建设置类&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SetFigure&lt;/strong&gt;：画布设置类&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SetAxes&lt;/strong&gt;：子区域绘图对象设置类&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;项目链接&#34;&gt;项目链接&lt;/h2&gt;
&lt;p&gt;更多详细信息和代码示例，请访问项目GitHub仓库：&lt;a href=&#34;https://github.com/Rookiehhh/xyplot.git&#34;&gt;xyplot&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>深度学习</title>
      <link>https://Rookie-AI.github.io/dl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://Rookie-AI.github.io/dl/</guid>
      <description>&lt;h3 id=&#34;在线资源&#34;&gt;在线资源&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zh-v2.d2l.ai/&#34;&gt;动手学习深度学习-李沐&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/machine-learning?hl=zh-cn&#34;&gt;谷歌机器学习教育&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.themlsbook.com/index.html&#34;&gt;&lt;strong&gt;Machine Learning Simplified&lt;/strong&gt;书籍的&lt;strong&gt;补充&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.pathmind.com/attention-mechanism-memory-network&#34;&gt;注意力机制和记忆网络初学者指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://distill.pub/2019/memorization-in-rnns/&#34;&gt;RNN中的记忆可视化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://luweiagi.github.io/machine-learning-notes/#/&#34;&gt;芦苇的机器学习笔记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nbviewer.org/github/ROOKIE-AI/Data-Science-Notes&#34;&gt;中文数据科学笔记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ai-start.com/dl2017/&#34;&gt;吴恩达-深度学习笔记(手机阅读)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ROOKIE-AI/deeplearning_ai_books&#34;&gt;吴恩达老师的深度学习课程笔记及资源(Github)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;动手学深度学习-李沐-个人笔记httpsnbviewerorggithubrookie-aidltreemaind2lme&#34;&gt;&lt;a href=&#34;https://nbviewer.org/github/ROOKIE-AI/DL/tree/main/d2l/me&#34;&gt;动手学深度学习-李沐 个人笔记&lt;/a&gt;&lt;/h3&gt;</description>
    </item>
  </channel>
</rss>
